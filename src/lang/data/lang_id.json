{
  "profesional": "Saya seorang",
  "programmer": "Programmer",
  "freelancer": "Pekerja lepas",
  "se": "Insinyur Perangkat Lunak",
  "theme_dark": "Gelap",
  "theme_light": "Terang",
  "home": "Beranda",
  "about": "Tentang",
  "portfolio": "Portofolio",
  "resume": "Resume",
  "blog": "Catatan",
  "services": "Layanan",
  "contact": "Kontak",
  "about_desc": "Saya adalah seorang Software Engineer yang berdedikasi dalam membangun solusi digital yang efisien, scalable, dan user-friendly. Dengan latar belakang kuat di bidang pengembangan web, saya terbiasa bekerja dengan berbagai teknologi modern seperti JavaScript/TypeScript, Svelte, Rust, dan berbagai framework lainnya.",
  "about_age": "Usia saya termasuk masih muda dan masih gemar dengan mencari pengalaman baru tentunya di bidang teknologi.",
  "born": "Tanggal Lahir",
  "age": "Usia",
  "website": "Situs Web",
  "phone": "Phone",
  "city": "Kota",
  "degree": "Lulusan",
  "bachlor": "Sarjana (S1)",
  "freelance": "Pekerja lepas",
  "availability": "Bersedia",
  "birth_date": "9 Juni 2000",
  "happy_client": "Klien Puas",
  "project_completed": "Proyek Selesai",
  "support": "Pelayanan",
  "hard_worker": "Kerja keras",
  "skill_title": "Keahlian",
  "skill_desc": "Perjalanan saya di dunia teknologi dimulai dari rasa penasaran terhadap bagaimana sebuah aplikasi bekerja. Dari situ, saya mulai belajar sendiri, membangun proyek kecil, dan terus berkembang hingga menjadi seorang Software Engineer yang terbiasa bekerja dari sisi frontend hingga backend.",
  "rust_desc": "Rust merupakan bahasa pemrograman yang saya pelajari sejak kuliah semester 6. Awalnya saya mempelajari pyhton untuk AI, kemudian saya mendapat informasi 'Katanya Rust Juga Bisa untuk AI loh...', sejak saat itu saya tertarik meskipun memang benar faktanya bahwa rust memang bahasa pemrograman paling ngeselin karena borrow checknya. Namun Rust tetap menjadi bahasa pemrograman favorit saya sampai sekarang dan lebih fokus untuk mengembangkan aplikasi backend dan web api untuk saat ini.",
  "python_desc": "Sebelum mengenal Rust, Python adalah bahasa pemrograman pertama yang saya pelajari. Saya kenal dengan Python bermula saat saya mengikuti program MSIB Kampus Merdeka di Orbit Future Academy dan disini juga saya pertama kali mengenal dunia IT dan Teknologi. Python pertama kali saya gunakan untuk membangun AI, ML, DL dll. Namun setelah saya bekerja saya sudah tidak pernah menggunakan python karena di tempat saya bekerja saya menggunakan bahasa pemrograman lain.",
  "html_desc": "HTML pertama kali saya pelajari saat saya mengikuti program MSIB Kampus Merdeka di Orbit Future Academy, HTML saya gunakan sebagai templating untuk penerapan model AI berbasis web dengan Flask. Selain sebagai templating, HTML juga saya gunakan untuk membuat web portfolio saya sendiri sebelumnya, untuk versi 1 seperti pada url berikut.",
  "css_desc": "Belajar HTML rasanya kurang kalau tidak ada CSS, karena website juga perlu tampilan yang bagus dan enak untuk dilihat, karena saya ingin menyajikan sebuah website yang orang jika berkunjung maka betah. Meskipun saya sendiri masih kurang dalam menggunakan styling dengan CSS.",
  "js_desc": "Awalnya saya tidak ingin belajar Javascript karena guru saya pernah memberikan saran untuk memilih satu bahasa pemrograman dulu untuk di dalamin, setelah bisa baru kamu bebas belajar apa saja Jadi saya memutuskan untuk mendalami dasar - dasar Rust terlebih dahulu. Namun ketika sudah dirasa cukup, saya mulai sedikit - sedikit belajar Javascript agar bisa membuat halaman website lebih interaktif dengan DOM.",
  "ts_desc": "Pada suatu ketika saya mendapatkan project pribadi dengan menggunakan tech stack MERN (MongoDB, Express, React, NodeJS), saya memutuskan untuk mempelajari TypeScript agar bisa membuat aplikasi yang lebih efisien dan efektif. Selain itu dengan typescript saya bisa menentukan type data yang sesuai sehingga data yang dikirimkan antara frontend dan backend tidak terjadi kesalahan dan untuk penyesuaian dengan ORM prisma juga mudah didebug.",
  "cs_desc": "Pada saat liburan semester 6, saya memutuskan untuk mencari pekerjaan supaya bisa tetap melanjutkan kuliah. Akhirnya pada awal semester 7 tepatnya di bulan November 2022 saya diterima di PT S21 Micropiranti Computer. Diperusahaan saya berkenalan dengan bahasa pemrograman C#, .NET, dan .NET Core. C# digunakan untuk membuat aplikasi backend dan web api diperusahaan. Namun C# hanya saya gunakan untuk project - project di kantor saja, untuk bahasa pemrograman yang saya gunakan dan tetap dalami adalah Rust.",

  "actix_desc": "Sebelumnya ketika saya ingin membuat web api dengan rust saya membuatnya dengan menggunakan tokio. Karena dengan tokio saya bisa membuat web api dengan asynchronous, atau multi thread. Kemudian saya mengenal actix web, dengan actix web membuat web api jadi lebih mudah karena ada fitur - fitur yang bisa saya gunakan seperti middleware, routing, error handling, dll. sehingga membuat aplikasi backend atau web api jadi lebih mudah dan cepat.",
  "vite_desc": "Siapa yang tidak kenal dengan Vite, Vite merupakan module bundler yang cepat dan mudah digunakan. Dengan vite kita sudah di sediakan example source, kerangka kerja, configurasi js/ts, dan suport dengan framework frontend modern seperti React, Vue, Svelte, dll. Selain itu Vite juga memiliki unitesting dan hot module reloading sehingga membuat pengembangan aplikasi frontend menjadi lebih mudah.",
  "svelte_desc": "Selain framework untuk membuat backend application saya juga membuat membuat halaman website dengan framework frontend seperti Svelte atau SvelteKit. Alasan mengapa saya menggunakan svelte karena simpel, cepat, mudah dan bundle size yang kecil karena tidak memerlukan runtime Virtual DOM atau WebAssembly. Selain itu svelte juga menggunakan Two Way Binding sehingga tidak perlu lagi memanipulasi DOM secara manual.",
  "express_desc": "Untuk Framework NodeJS yang paling populer dan mudah adalah Express. Selain itu dukungan komunitas yang luas juga memberikan kita suport ketika membuat aplikasi backend atau web api dengan Express dan Express juga memiliki banyak middleware yang bisa kita gunakan seperti body parser, cors, morgan, routing yang friendly, error handling, dll. Sehingga membuat aplikasi backend atau web api jadi lebih mudah dan cepat.",
  "hono_desc": "Ada express di NodeJS adapula Hono di Bun. Framework Bun yang paling saya suka dan menurut saya probadi itu mudah digunakan adalah hono. Seperti express hono juga memiliki fitur - fitur yang sama banyak dan lengkapnya seperti express, sehingga ketika ingin melakukan migrasi dari express ke hono tidak memerlukan effort yang besar. Namun untuk Hono dan Bun sendiri sya masih belum lama menggunakan dan masih mempelajari fitur - fitur baru dari Hono dan Bun.",
  "react_desc": "Sebelum svelte, react dan next adalah framework frontend favorit saya sebelumnya. Awal saya menggunakan react karena ketika ingin memanipulasi state dan DOM dengan Vanila Javascript itu hal yang memerlukan efort lebih dan diwaktu itu react merupakan framework populer dimana komunitasnya sangat besar. Mau nyari apa aja pasti ada. Namun setelah muncul react V18 keatas saya mulai kurang suka dengan react karena adanya hook dan semakin banyaknya third party library membuat saya pribadi bingung. React sekarang sudah tidak sesimpel dulu lagi dan sejak itu saya mulai menggunakan svelte.",
  "bootstrap_desc": "Selain framework untuk interaktif frontend saya juga menggunakan bootstrap untuk membuat desain website agar lebih responsif dan mempermudah untuk memberikan style pada halaman website. Saya mulai menggunakan bootstrap ketika saya pertama kali menggunakan react. Karena dengan bootstrap saya bisa membuat suatu component dengan class dan atribut yang di berikan oleh bootatrap, sehingga saya component bisa berubah sesuai dengan tampilan yang saya inginkan.",
  "sass_desc": "Untuk Sass bisa di bilang saya belum lama menggunakan nya, karena menggunakan sass ketika bootatrap versi 5.3.0 rilis yaitu pada 30 Mei 2023. Waktu itu saya menggunakan bootatrap karena ada kebutuhan untuk project yang banyak di pake oleh client dan bisa berubah-ubah style nya. Jadi saya melakukan kombinasi antara Sass dengan Bootatrap untuk melakukan otomatisasi pada beberapa component sehingga tidak perlu lagi membuatnya secara manual.",
  "dotnet_desc": "Mencari environment untuk aplikasi berbasis windows, .NET merupakan pilihan tepat sebagai framework baik untuk web api, mvc, desktop, dll. .NET dan C# merupakan teknologi yang saya gunakan dan dikantor tempat saya bekerja. Dikantor saya menggunakan C# dan .NET Core untuk membuat aplikasi backend dan web api. Namun untuk project pribadi atau bahasa pemrograman sehari-hari diluar kantor saya tetap menggunakan Rust.",
  "angular_desc": "Angular JS atau Angular versi 1 adalah framework yang digunakan oleh tim dikantor sebagai framework frontend utama. Yang biasanya di kombinasikan dengan JQuery dan Gulp sebagai module bundlernya. Angular JS telah berakhir sukungan resminya oleh tim Angular sejak Januari 2022. Oleh karena itu saya sedang bertahap untuk migrasi teknologi ke Svelte karena kebiasaan tim dengan angular js yang menggunakan two way data binding dan svelte lebih sederhana dan mudah. Selain itu dari atasan dan tim juga setup untuk menggunakan svelte.",

  "git_desc": "Bagi semua programmer, CI/CD merupakan sebuah tools untuk mengintegrasikan suatu perangkat lunak, code atau project agar dalam siklus pengembangan bisa dimaintain dengan baik. Ketika saya memulai bertpetualang didunia teknologi saya mulai menggunakan git sebagai media sosial utama seorang programmer. DImana saya bisa menyimpan dan mempublish apa yang pernah saya buat di internet. Selain itu saya juga mempelajari dan menerapkan Gitea di dalam perusahaan saya bekerja. Karena agar code project dapat dimanaged dengan baik dan efisien.",
  "swagger_desc": "Seorang programmer lebih tepatnya seorang backend atau fullstack tentunya wajib membuat dokumentasi dari api yang telah dibuat. Selain itu dokumentasi ini juga sangat membantu dalam mempermudah dalam mempelajari integrasi ke beberapa aplikasi lain dengan menerapkan api specification yang telah dibuat. Sehingga jika bekerja secara tim dengan frontend, mobile, dektop dan aplikasi backend lainnya akan lebih mudah dan terstruktur. Selain itu api specification juga membantu saya pribadi dalam mengingat fitur dan fungsi pada aplikasi yang saya buat.",
  "postgresql_desc": "Membuat aplikasi backend atau api tentu tidak ketinggalan yang namanya database. PostgreSQL merupakan salah satu database favorit saya karena memiliki fitur-fitur yang sangat lengkap dan tentunya gratis. PostgreSQL adalah database yang pertamakali saya pelajari dan saya gunakan untuk membuat project pribadi. Fitur yang saya sukai dan paling sering saya gunakan di PostgreSQl adalah function dan Stored Procedure, karena dengan fitur ini penulisan code tidak terlalu panjang dan rapi selain itu logic bisnis juga ada didalam database.",
  "mssql_desc": "Selain PostgreSQL dikantor dan project pribadi saya juga menggunakan Microsoft SQL Server. SQL Server pertamakali saya pelajari ketika saya masuk ke perusahaan saya bekerja fitur dari SQL server juga tidak kalah banyak seperti PostgreSQL. Namun untuk mengakses semua fitur dari SQL Server secara native hanya bisa mengguakan C# dan .NET atau .NET Core seperti Trigger, Migration, Tracking, SMO, Dependency Injection dll, ORM dengan Entity Framework dan Notification. Namun untuk function dan stored procedure masih bisa digunakan dengan bahasa pemrograman lain seperti Rust yang saya gunakan.",
  "nodejs_desc": "Awal mula saya belajar nodejs karena ketika saya ingin menggunakan React saya memerlukan NPM (Node Package Manager) untuk menginstall dependensi dan package lainnya. Jadi saya mulai sedikit mempelajari nodejs agar setidaknya saya tau cara bekerja Javascript disisi server. Namun seiring belajalannya waktu ternyata saya juga memerlukan pemahaman lebih untuk membangun aplikasi backend dengan nodejs. Saya mulai mempelajari Express.js dan Prisma untuk membuat aplikasi backend yang lebih efisien dan efektif.",
  "bun_desc": "Bun atau yang orang kenal sebagai alternatif tercepat dari Node JS. Bun memiliki fitur baru seperti module bundler, routing, database, dan lain sebagainya. Selain itu bun juga memiliki fitur - fitur yang membuat aplikasi backend menjadi lebih cepat dan efisien. Namun saya belum lama menggunakan bun dan masih mempelajari fitur - fitur baru dari bun. Sehingga masih perlu banyak dipelajari. Namun sedikit demi sedikit saya sedang migrasi dari nodejs ke bun agar aplikasi backend yang dibuat dengan javascript/typescript harapannya menjdi lebih cepat.",
  "mongodb_desc": "Database lain yang saya gunakan adalah MongoDB. Mongodb merupakan database non-relational yang sangat populer digunakan oleh banyak developer. Fitur yang paling saya sukai pada mongodb adalah Full Text Search, Aggregation, dan Replication. fitur ini sangat membantu dalam meningkatkan performance aplikasi dalam pencarian data atau get data. Meskipun pada database lain seperti PostgreSQL dan Microsoft SQL Server juga terdapat fitur ini tetapi pada MongoDB memiliki performa yang lebih baik dan lebih cepat karena berbasis database object.",
  "redis_desc": "Database lain yang saya gunakan adalah Redis. seperti yang kita tahu Redis digunakan untuk menyimpan data status sebagai cache diserver seperti data session atau data-data lain yang sering diakses oleh user. Karena redis berbasi key value dan disimpan di memory sehingga sangat cepat dan efisien. Namun saya belum lama menggunakan redis dan masih mempelajari fitur-fitur yang ada di redis. Bisasanya saya hanya menggunakannya untuk pengelolaan session saja.",
  "docker_desc": "Docker adalah platform yang digunakan untuk mempermudah proses pengembangan, penyebaran, dan menjalankan aplikasi di dalam kontainer. Artinya docker memungkinkan suatu aplikasi jalan di dalam container atau wadah dan resource memory yang di isolasi dari aplikasi lain. Sehingga hal ini akan memudahkan proses pengembangan dan penyebaran aplikasi serta sangat membantu untuk mmemanajemen aplikasi supaya semua aplikasi bisa berjalan dengan baik di sebuah lingkungan tertentu.",
  "kubernetes_desc": "Selain docker kontainer tentunya kuranng lengkap jika tidak menggunakan Kubernetes.Kubernetes adalah sistem open source yang digunakan untuk mengotomatiskan penerapan, penskalaan, dan pengelolaan aplikasi dalam kontainer. Dengan kubernetes kita dapat mengelola banyak kontainer secara otomatis, sehingga kita bisa mengelola aplikasi dengan lebih mudah dan cepat. Selain itu fitur yang pling saya suka adalah auto scale atau jika suatu saat trafiknya meningkat maka secara otomatis akan menambahkan node baru untuk menangani traffic tersebut.",

  "resume_title": "Resume",
  "resume_desc": "Seorang Software Engineer yang bersemangat dan berorientasi pada detail dengan dasar yang kuat dalam membangun solusi web dan perangkat lunak yang dapat diskalakan. Dengan pengalaman di bidang arsitektur backend, frontend, dan sistem, saya ahli dalam menerjemahkan ide menjadi aplikasi dunia nyata yang efisien menggunakan teknologi modern seperti Rust, NodeJS, .NET, Svelte, React, dan Vite.",
  "resume_summary": "Deskripsi Singkat",
  "resume_summary_desc": "Saya seorang Freelancer, Programmer, dan Insinyur Perangkat Lunak dengan pengalaman 4+ tahun dalam pengembangan web.",
  "resume_education": "Riwayat Pendidikan",
  "resume_bachelor": "Sarjana (S1) Akuntansi & Keuangan",
  "resume_bachelor_desc": "Lulus dengan pemahaman yang kuat di bidang akuntansi keuangan, audit, dan pelaporan keuangan. Aktif dalam organisasi kampus dan proyek riset kecil tentang efisiensi sistem keuangan UMKM.",
  "resume_vocation": "Sekolah Menengah Kejuruan",
  "resume_vocation_desc": "Lulusan SMK jurusan Perbankan Syariah dengan dasar keahlian di bidang akuntansi dasar, presentasi yang baik, perancangan management dan kewirausahaan. Terlibat aktif dalam praktik kerja industri, lomba kompetensi siswa, atau proyek sekolah.",  "resume_profesional": "Pengalaman Kerja",
  "resume_profesional_desc1": "Membuat situs web profil perusahaan untuk perusahaan Anda.",
  "resume_profesional_desc2": "Mengembangkan dan memelihara aplikasi web responsif untuk berbagai industri klien menggunakan teknologi web modern (HTML5, CSS3, JavaScript, dan kerangka kerja populer seperti React dan Angular).",
  "resume_profesional_desc3": "Berkolaborasi erat dengan desainer UI/UX dan pengembang backend untuk memberikan solusi perangkat lunak yang disesuaikan dengan kebutuhan klien.",
  "resume_profesional_desc4": "API RESTful terintegrasi dan bekerja dengan database (Microsoft SQL Server) untuk mendukung konten dinamis.",
  "resume_profesional_desc5": "Berpartisipasi dalam tinjauan kode, perencanaan sprint, dan rapat stand-up rutin sebagai bagian dari tim pengembangan Agile.",
  "resume_profesional_desc6": "Memberikan dukungan teknis, debugging, dan pemeliharaan pasca-penerapan untuk proyek yang dikirimkan.",
  "resume_profesional_desc7": "Berkontribusi pada dokumentasi dan manual pengguna untuk klien dan tim internal.",
  "resume_more": "Pengalaman Lainnya",
  "resume_more_link": "Lihat Pengalaman Lainnya",

  "portfolio_title": "Portfolio",
  "portfolio_desc": "Perjalanan saya di dunia teknologi tentunya menemukan banyak referensi dan case yang membantu saya untuk semakin mengembangkan keahlian saya di bidang teknologi saya tidak sungkan untuk membagikan karya saya.",

  "service_title": "Layanan",
  "service_backend": "Saya membangun sistem backend yang cepat, aman, dan scalable menggunakan teknologi seperti Rust (Actix/Axum), NodeJS/Bun (Express/Hono) dan C# (.NET/.NET Core). Fokus saya pada efisiensi API, struktur code yang bersih, dan integrasi database yang solid serta dokumentasi yang baik.",
  "service_frontend": "Membuat antarmuka pengguna yang menarik dan responsif menggunakan Svelte dan React. Saya mengutamakan pengalaman pengguna (UX) dan desain yang konsisten, dengan bantuan CSS framework seperti Bootstrap atau CSS preprocessor seperti Sass.",
  "service_seo": "Saya membantu meningkatkan visibilitas situs web Anda di mesin pencari melalui pengoptimalan struktur HTML, kecepatan situs, penggunaan metadata yang tepat, dan strategi konten yang efektif agar muncul di halaman pertama mesin pencari.",
  "service_db": "Pengalaman dalam merancang, mengelola, dan mengoptimalkan database relasional (PostgreSQL, SQL Server) maupun non-relasional (MongoDB). Saya memastikan integritas data dan performa query yang optimal.",
  "service_mentor": "Tidak hanya membangun atau mengembangkan aplikasi, saya juga menyediakan sesi mentoring untuk individu atau tim yang ingin belajar lebih dalam tentang pemrograman, arsitektur perangkat lunak, hingga praktik terbaik dalam pengembangan sistem.",
  "service_arch": "Saya merancang arsitektur perangkat lunak yang modular dan maintainable, menggunakan pendekatan seperti DDD, service-oriented architecture, dan clean code principles. Tujuannya: memastikan proyek scalable dan mudah dikembangkan dalam jangka panjang.",

  "blog_title": "Catatan",
  "blog_desc": "Terkadang di waktu luang atau gabut saya, saya membuat catatan mengenai teknologi yang saya pelajari. Tujuannya adalah sebagai dokumentasi tentang apa yang saya pelajari dan bagaimana saya memahami teknologi tersebut. Serta sebagai pengingat di masa yang akan datang.",

  "testimoni_title": "Testimoni",
  "testimoni_desc": "erimakasih atas feedback yang telah memberikan kepercayaan kepada saya. Saya sangat senang dapat bekerja sama dengan tim yang berdedikasi dalam membuat solusi digital yang efisien, scalable, dan user-friendly.",

  "contact_title": "Kontak",
  "contact_desc": "Jika Anda memiliki pertanyaan atau ingin berdiskusi tentang proyek Anda, jangan ragu untuk menghubungi saya melalui kontak di bawah ini.",

  "send_message": "Kirim Pesan"
}
